"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[167],{32137:e=>{e.exports=JSON.parse('{"functions":[],"properties":[],"types":[{"name":"APIDump","desc":"See [DumpParser.APIDump](https://csqrl.github.io/dump-parser/api/Types#APIDump).","lua_type":"DumpParser.APIDump","source":{"line":14,"path":"src/init.d.lua"}},{"name":"DumpParser","desc":"See [DumpParser](https://csqrl.github.io/dump-parser/api/Dump).","lua_type":"DumpParser","source":{"line":22,"path":"src/init.d.lua"}},{"name":"Property","desc":"Represents a property/attribute of an Instance.","fields":[{"name":"Type","lua_type":"string","desc":""},{"name":"Value","lua_type":"any","desc":""}],"source":{"line":32,"path":"src/init.d.lua"}},{"name":"CommonTreeNode","desc":"","fields":[{"name":"Name","lua_type":"string","desc":""},{"name":"ClassName","lua_type":"string","desc":""},{"name":"Properties","lua_type":"{ [string]: Property }","desc":""},{"name":"Attributes","lua_type":"{ [string]: Property }?","desc":""},{"name":"Tags","lua_type":"{ string }?","desc":""},{"name":"Ref","lua_type":"string","desc":""}],"private":true,"source":{"line":48,"path":"src/init.d.lua"}},{"name":"TreeNode","desc":"","lua_type":"CommonTreeNode & { Children: { TreeNode }? }","source":{"line":61,"path":"src/init.d.lua"}},{"name":"FlatTreeNode","desc":"","lua_type":"CommonTreeNode","source":{"line":69,"path":"src/init.d.lua"}},{"name":"Package","desc":"A package with a normal tree structure (i.e. each node has a\\n`Children` property).","fields":[{"name":"Refs","lua_type":"{ [Instance]: string }","desc":""},{"name":"Tree","lua_type":"TreeNode","desc":""}],"source":{"line":80,"path":"src/init.d.lua"}},{"name":"FlatPackage","desc":"A flat package does not have a normal tree structure. The tree\\nis an array of nodes. Each node that has a parent has a `Parent`\\nproperty that is a reference to the parent node\'s `Ref` property.","fields":[{"name":"Refs","lua_type":"{ [Instance]: string }","desc":""},{"name":"RootRef","lua_type":"string","desc":""},{"name":"Tree","lua_type":"{ [string]: FlatTreeNode }","desc":""}],"source":{"line":96,"path":"src/init.d.lua"}},{"name":"ValueEncoder","desc":"","lua_type":"(value: any, valueType: string) -> (any, string?)","source":{"line":106,"path":"src/init.d.lua"}},{"name":"ValueDecoder","desc":"","lua_type":"(value: any, valueType: string) -> (any, string?)","source":{"line":112,"path":"src/init.d.lua"}},{"name":"PackageConfig","desc":"","fields":[{"name":"valueEncoder","lua_type":"ValueEncoder?","desc":""}],"source":{"line":119,"path":"src/init.d.lua"}},{"name":"BuilderConfig","desc":"","fields":[{"name":"valueDecoder","lua_type":"ValueDecoder?","desc":""}],"source":{"line":128,"path":"src/init.d.lua"}},{"name":"RobloxInstance<T>","desc":"","lua_type":"Instance & T","source":{"line":136,"path":"src/init.d.lua"}}],"name":"Types","desc":"","source":{"line":5,"path":"src/init.d.lua"}}')}}]);